#include <iostream>

//매크로
//함수가 인라인화 되면 성능의 향상으로 이어진다.
//함수의 정의 방식이 일반함수에 비해 복잡하기 때문에 복잡한 함수 정의에 한계가 있음.
//디버깅이 어려움(컴파일 에러 메세지를 확인할 수 없음)
//매크로 함수를 처리하는 것은 선행처리기(컴파일 이전에 선행되는 것)

//매크로의 장점은 취하고 단점은 보완 -> inline함수
//인라인함수는 컴파일러에 의해서 실행되기 때문에 굳이 괄호를 다 쳐주지 않아도 됨
inline int SQUARE(int x){
    return x * x;
}

int main(void){
    std::cout << SQUARE(5) << std::endl;
    std::cout << SQUARE(12) << std::endl;

    return 0;
}

//But, 인라인함수가 매크로 함수를 완전히 대신할 수 없음
//매크로는 자료형에 독립적이지만, 인라인은 자료형을 미리 정의해야 함

